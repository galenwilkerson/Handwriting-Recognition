
R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> # load non-segmented data
> # for each parameter, find WTMM
> 
> rm(list = ls())
> 
> require(graphics)
> library(wmtsa)
Loading required package: splus2R
Loading required package: ifultools
Loading required package: MASS
> 
> # load(../data/nonsegmented_Rollschuhe_1_pen.csv")
> infilename <- "../data/nonsegmented_Rollschuhe_1_pen.csv"
> pen.data = read.csv(infilename, header = TRUE, sep = ",")
> 
> param_name = "acc_x"
> y <- signalSeries(pen.data[[param_name]])
> x <- 1:length(y)
> 
> 
> ## calculate CWT using Mexican hat filter
> wavelet_types = list("gaussian1", "gaussian2")
> 
> for (wavelet_type in wavelet_types) {
+     W <- wavCWT(y, wavelet=wavelet_type)
+ 
+     plot(W, main = paste(param_name, wavelet_type))
+ 
+     ## calculate WTMM and extract first two branches
+     ## in tree corresponding to the cusps
+     W.tree <- wavCWTTree(W, n.octave.min = .25)#[1:2]
+     
+     ## plot the CWT tree overlaid with a scaled
+     ## version of the time series to illustrate
+     ## alignment of branches with cusps
+     yshift <- y@data - min(y@data)
+     yshift <- yshift / max(yshift) * 4 - 4.5
+     plot(W.tree, xlab="x", main = paste(param_name, wavelet_type))
+ #    lines(x, yshift, lwd=2)
+     text(6.5, -1, "f(x) = -0.2|x-1|^0.5 - 0.5|x-15|^0.3 + 0.00346x + 1.34", cex=0.8)
+ 
+     ## estimate Holder exponents
+     holder <- holderSpectrum(W.tree)
+     print(wavelet_type)
+     print(holder)
+ }
Error in linearSegmentation(logscale, logwtmm) : 
  n.fit must be on the interval [3, length(x)]
Calls: holderSpectrum -> linearSegmentation
Execution halted
